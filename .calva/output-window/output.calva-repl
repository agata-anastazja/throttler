; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in Terminal: (cd /Users/agatasumowska/Documents/dev/throttler; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:50792 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in Terminal: (cd /Users/agatasumowska/Documents/dev/throttler; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:50800 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: core.clj
nil
clj꞉throttler.core꞉> 
"123"
clj꞉throttler.core꞉> 
#'throttler.core/experiment
clj꞉throttler.core꞉> 
#'throttler.core/ex
clj꞉throttler.core꞉> 
; 123
nil
clj꞉throttler.core꞉> 
; Syntax error compiling at (core_copy.clj:123:17).
; Unable to resolve symbol: throttle-chan in this context
clj꞉throttler.core-copy꞉> 
; Evaluating file: core_copy.clj
nil
clj꞉throttler.core-copy꞉> 
#'throttler.core-copy/throttle-fn
clj꞉throttler.core-copy꞉> 
#'throttler.core-copy/+#
clj꞉throttler.core-copy꞉> 
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; failure
; "Elapsed time: 60.472223 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.350491 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.343491 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.509847 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.330005 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.281371 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.471584 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.568131 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.278297 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.843986 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.317241 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 1.050795 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.654949 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.30894 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.625687 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.35048 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.377069 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 1.619762 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.346058 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.352637 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.487538 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.292593 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.88187 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.413498 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.830497 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.534349 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.394894 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.335509 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 1.470546 msecs"
nil
clj꞉throttler.core-copy꞉> 
; "Elapsed time: 0.403327 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
; "Elapsed time: 0.90921 msecs"
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
#'throttler.core-copy/throttle-fn
clj꞉throttler.core-copy꞉> 
#'throttler.core-copy/+#
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
#'throttler.core-copy/throttle-fn
clj꞉throttler.core-copy꞉> 
#'throttler.core-copy/+#
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
#'throttler.core-copy/throttle-fn
clj꞉throttler.core-copy꞉> 
#'throttler.core-copy/+#
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
2
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
; failure
nil
clj꞉throttler.core-copy꞉> 
